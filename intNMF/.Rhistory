})
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions.pdf", height = 9, width = 9)
lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),], 'natgen'),
change_column_paste(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]]), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),], 'natgen'),
change_column_paste(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]]), 'fit_pcawg_norm'),
change_column_paste(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
.a <- try(hclust(cor(.x)))
if(typeof(.a) == "character"){
## error
pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it)
}else{
pheatmap(cor(.x), main = names_features_it)
}
})
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions.pdf", height = 9, width = 9)
lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),], 'natgen'),
change_column_paste(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]]), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),], 'natgen'),
change_column_paste(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]]), 'fit_pcawg_norm'),
change_column_paste(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]]), 'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
.a <- try(hclust(cor(.x)))
if(typeof(.a) == "character"){
## error
print(pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it))
}else{
print(pheatmap(cor(.x), main = names_features_it))
}
})
dev.off()
normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),])
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions.pdf", height = 9, width = 9)
lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]]), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
.a <- try(hclust(cor(.x)))
if(typeof(.a) == "character"){
## error
print(pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it))
}else{
print(pheatmap(cor(.x), main = names_features_it))
}
})
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions.pdf", height = 9, width = 9)
lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])),
'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
.a <- try(hclust(cor(.x)))
if(typeof(.a) == "character"){
## error
print(pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it))
}else{
print(pheatmap(cor(.x), main = names_features_it))
}
})
dev.off()
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])),
'fit_pcawg_norm_fewerfeaturesk5notnorm'))
names_features_it
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
.x
names_features_it=names_features[1]
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])),
'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
.a <- try(hclust(cor(.x)))
.a
.x
cor(.x))
cor(.x)
hclust(cor(.x))
cor_xâ‰ cor(.x)
cor_x <- cor(.x)
.a <- try(hclust(cor_x))
print(pheatmap(cor(.x), main = names_features_it))
cor_x
hclust(cor_x)
hclust(as(cor_x, 'matrix'))
hclust(as(cor_x, 'numerc'))
hclust(as(cor_x, 'numeric'))
as(cor_x, 'numeric')
hclust(sapply(cor_x, as.numeric))
sapply(cor_x, as.numeric)
apply(cor_x, 2, as.numeric)
hclust(apply(cor_x, 2, as.numeric))
length(apply(cor_x, 2, as.numeric))
dim(apply(cor_x, 2, as.numeric))
cor_x
View(cor_x)
cor_x <- pply(cor(.x), 2, as.numeric)
cor_x <- apply(cor(.x), 2, as.numeric)
cor_x
hclust(cor_x)
hclust(cor_x[1:3,1:3])
cor_x[1:3,1:3]
as(cor_x[1:3,1:3], 'matrix')
as.matrix(cor_x[1:3,1:3])
hclust()
hclust(as.matrix(cor_x[1:3,1:3]))
cor_x
min(cor_x)
max(cor_x)
hclust(as.matrix(cor_x[1:3,1:3]))
cor_x <- as.dist(apply(cor(.x), 2, as.numeric))
hclust(cor_x)
pdf("figures/correlation_exposures_several_sig_definitions.pdf", height = 9, width = 9)
lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])),
'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
cor_x <- as.dist(apply(cor(.x), 2, as.numeric))
.a <- try(hclust(cor_x))
if(typeof(.a) == "character"){
## error
print(pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it))
}else{
print(pheatmap(cor(.x), main = names_features_it))
}
})
dev.off()
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions.pdf", height = 9, width = 9)
lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])),
'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
cor_x <- as.dist(apply(cor(.x), 2, as.numeric))
.a <- try(hclust(cor_x))
if(typeof(.a) == "character"){
## error
print(pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it))
}else{
print(pheatmap(cor(.x), main = names_features_it))
}
})
dev.off()
## correlation per feature
pdf("figures/correlation_exposures_several_sig_definitions.pdf", height = 9, width = 9)
normalised_features_sigs <- lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])),
'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
cor_x <- as.dist(apply(cor(.x), 2, as.numeric))
.a <- try(hclust(cor_x))
if(typeof(.a) == "character"){
## error
print(pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it))
}else{
print(pheatmap(cor(.x), main = names_features_it))
}
return(.x)
})
dev.off()
normalised_features_sigs
length(normalised_features_sigs)
normalised_features_sigs[[1]]
do.call(normalised_features_sigs, 'rbind')
do.call( 'rbind', normalised_features_sigs)
sapply(normalised_features_sigs, dim)
sapply(normalised_features_sigs, dim)
## fill empty entries in the cases of signatures with fewer features
which(sapply(normalised_features_sigs, dim)[2,] == 9)
normalised_features_sigs
length(normalised_features_sigs)
sigset_it=1
normalised_features_sigs[[sigset_it]]
normalised_features_sigs[[sigset_it]]which(sapply(normalised_features_sigs, dim)[2,] == 9)
which(sapply(normalised_features_sigs, dim)[2,] == 9)
length(normalised_features_sigs)
normalised_features_sigs[[1]]
which(sapply(normalised_features_sigs, dim)[2,] == 9)
i_fewer_features
i_fewer_features=2
normalised_features_sigs[[i_fewer_features]]
normalised_features_sigs[[2]]
normalised_features_sigs[[1]]
normalised_features_sigs[[2]]
normalised_features_sigs[[3]]
normalised_features_sigs[[4]]
sapply(normalised_features_sigs, dim)
normalised_features_sigs[[2]]
match(colnames(normalised_features_sigs[[2]]), colnames(normalised_features_sigs[[1]]))
match(colnames(normalised_features_sigs[[1]]), colnames(normalised_features_sigs[[2]]))
normalised_features_sigs[[i_fewer_features]][,match(colnames(normalised_features_sigs[[1]]),
colnames(normalised_features_sigs[[i_fewer_features]]))]
normalised_features_sigs[[i_fewer_features]]
normalised_features_sigs[[i_fewer_features]][,,match(colnames(normalised_features_sigs[[1]]),
colnames(normalised_features_sigs[[i_fewer_features]]))]
normalised_features_sigs[[i_fewer_features]][,match(colnames(normalised_features_sigs[[1]]),
colnames(normalised_features_sigs[[i_fewer_features]]))]
match(colnames(normalised_features_sigs[[1]]),
colnames(normalised_features_sigs[[i_fewer_features]]))
match_cols <- match(colnames(normalised_features_sigs[[1]]),
colnames(normalised_features_sigs[[i_fewer_features]]))
sapply(match_cols, function(i) if(is.na(i)){NA}else{normalised_features_sigs[[i_fewer_features]][,i]})
nrow(normalised_features_sigs[[i_fewer_features]])
sapply(match_cols, function(i) if(is.na(i)){rep(NA, nrow(normalised_features_sigs[[i_fewer_features]]))
}else{normalised_features_sigs[[i_fewer_features]][,i]})
## fill empty entries in the cases of signatures with fewer features
for(i_fewer_features in which(sapply(normalised_features_sigs, dim)[2,] == 9)){
match_cols <- match(colnames(normalised_features_sigs[[1]]),
colnames(normalised_features_sigs[[i_fewer_features]]))
normalised_features_sigs[[i_fewer_features]] <- sapply(match_cols, function(i) if(is.na(i)){rep(NA, nrow(normalised_features_sigs[[i_fewer_features]]))
}else{normalised_features_sigs[[i_fewer_features]][,i]})
colnames(normalised_features_sigs[[i_fewer_features]]) = normalised_features_sigs[[1]]
}
normalised_features_sigs
sapply(normalised_features_sigs, dim)
do.call('cbind', normalised_features_sigs)
do.call('rbind', normalised_features_sigs)
sapply(normalised_features_sigs, colnames)
normalised_features_sigs[[1]]
normalised_features_sigs[[2]]
## correlation per feature
pdf("figures/correlation_exposures_several_sig_definitions.pdf", height = 9, width = 9)
normalised_features_sigs <- lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])),
'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
cor_x <- as.dist(apply(cor(.x), 2, as.numeric))
.a <- try(hclust(cor_x))
if(typeof(.a) == "character"){
## error
print(pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it))
}else{
print(pheatmap(cor(.x), main = names_features_it))
}
return(.x)
})
dev.off()
normalised_features_sigs[[2]]i_fewer_features
which(sapply(normalised_features_sigs, dim)[2,] == 9)
i_fewer_features=2
match_cols <- match(colnames(normalised_features_sigs[[1]]),
colnames(normalised_features_sigs[[i_fewer_features]]))
sapply(match_cols, function(i) if(is.na(i)){rep(NA, nrow(normalised_features_sigs[[i_fewer_features]]))
}else{normalised_features_sigs[[i_fewer_features]][,i]})
normalised_features_sigs[[i_fewer_features]] <- sapply(match_cols, function(i) if(is.na(i)){rep(NA, nrow(normalised_features_sigs[[i_fewer_features]]))
}else{normalised_features_sigs[[i_fewer_features]][,i]})
colnames(normalised_features_sigs[[i_fewer_features]])
## correlation per feature
pdf("figures/correlation_exposures_several_sig_definitions.pdf", height = 9, width = 9)
normalised_features_sigs <- lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])),
'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
cor_x <- as.dist(apply(cor(.x), 2, as.numeric))
.a <- try(hclust(cor_x))
if(typeof(.a) == "character"){
## error
print(pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it))
}else{
print(pheatmap(cor(.x), main = names_features_it))
}
return(.x)
})
dev.off()
sapply(normalised_features_sigs, dim)
## fill empty entries in the cases of signatures with fewer features
for(i_fewer_features in which(sapply(normalised_features_sigs, dim)[2,] == 9)){
match_cols <- match(colnames(normalised_features_sigs[[1]]),
colnames(normalised_features_sigs[[i_fewer_features]]))
normalised_features_sigs[[i_fewer_features]] <- sapply(match_cols, function(i) if(is.na(i)){rep(NA, nrow(normalised_features_sigs[[i_fewer_features]]))
}else{normalised_features_sigs[[i_fewer_features]][,i]})
colnames(normalised_features_sigs[[i_fewer_features]]) = colnames(normalised_features_sigs[[1]])
}
sapply(normalised_features_sigs, dim)
do.call('rbind', normalised_features_sigs)
normalised_features_sigs_all <- do.call('rbind', normalised_features_sigs)
sapply(normalised_features_sigs, colnames)
cor(normalised_features_sigs_all)
cor(normalised_features_sigs_all, na.exclude(T))
?na.action
cor(na.omit(normalised_features_sigs_all))
cor_normalised_features_sigs_all <- cor(na.omit(normalised_features_sigs_all))
pheatmap(cor_normalised_features_sigs_all)
cor_normalised_features_sigs_all
cor_normalised_features_sigs_all_hclust <- hclust(as.dist(cor_normalised_features_sigs_all))
cor_normalised_features_sigs_all_hclust
as.dendrogram (cor_normalised_features_sigs_all_hclust
)
## k = 5
pairs(cbind.data.frame(newsigs=fit_pcawg_norm_fewerfeaturesk5$W, natgen[match(rownames(fit_pcawg_norm$W), rownames(natgen)),]))
pheatmap(cor(all_exposures))
cor_all_exposures <- cor(all_exposures)
cor_all_exposures
cor_all_exposures_hclust <- hclust(as.dist(cor_all_exposures))
## tanglegram
dend_comparison_1 <- as.dendrogram (cor_normalised_features_sigs_all_hclust)
dend_comparison_2 <- as.dendrogram (cor_all_exposures_hclust)
tanglegram(dend_comparison_1, dend_comparison_2)
?tanglegram
??tanglegram
library(dendextend)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2)
dend_comparison_1
## tanglegram
dend_comparison_1 <- as.dendrogram (cor_normalised_features_sigs_all_hclust, main='adsd')
dend_comparison_2 <- as.dendrogram (cor_all_exposures_hclust)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2)
## tanglegram
dend_comparison_1 <- as.dendrogram (cor_normalised_features_sigs_all_hclust, title='adsd')
dend_comparison_2 <- as.dendrogram (cor_all_exposures_hclust)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2)
?tanglegram
dendextend::tanglegram(asdsa=dend_comparison_1, dend_comparison_2, )
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left'ad')
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='ad')
pdf("figures/correlation_exposures_several_sig_definitions_exposures_tanglegram.pdf", height = 9, width = 9)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs')
dev.off()
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(1,4,1))
pdf("figures/correlation_exposures_several_sig_definitions_exposures_tanglegram.pdf", height = 5, width = 4)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(1,3,1))
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions_exposures_tanglegram.pdf", height = 5, width = 4)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6))
dev.off()
?tanglegram
pdf("figures/correlation_exposures_several_sig_definitions_exposures_tanglegram.pdf", height = 5, width = 4)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6))
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions_exposures_tanglegram.pdf", height = 5, width = 7)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6))
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions_exposures_tanglegram.pdf", height = 5, width = 7)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6), cex_main=1)
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions_exposures_tanglegram.pdf", height = 5, width = 7)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6), cex_main=2)
dev.off()
pdf("figures/correlation_exposures_several_sig_definitions_exposures_tanglegram.pdf", height = 5, width = 7)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6), cex_main=2, lab.cex=1)
dev.off()
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6), cex_main=2, lab.cex=1, highlight_distinct_edges=F)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6), cex_main=2, lab.cex=1, highlight_distinct_edges=F, highlight_branches_col=F)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6), cex_main=2, lab.cex=1, highlight_distinct_edges=F, highlight_branches_lwd=F)
pdf("figures/correlation_exposures_several_sig_definitions_exposures_tanglegram.pdf", height = 5, width = 7)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6), cex_main=2, lab.cex=1, highlight_distinct_edges=F, highlight_branches_lwd=F)
dev.off()
pheatmap(cor_normalised_features_sigs_all)
pdf("figures/correlation_exposures_joint_sig_definitions.pdf", height = 9, width = 9)
pheatmap(cor_normalised_features_sigs_all)
dev.off()
dev.off()
pdf("figures/correlation_exposures_joint_sig_definitions.pdf", height = 9, width = 9)
pheatmap(cor_normalised_features_sigs_all)
dev.off()
pdf("figures/correlation_several_sig_definitions_exposures_tanglegram.pdf", height = 5, width = 7)
dendextend::tanglegram(dend_comparison_1, dend_comparison_2, main_left='Cor exposures', main_right='Cor sig defs',
columns_width=c(6,3,6), cex_main=2, lab.cex=1, highlight_distinct_edges=F, highlight_branches_lwd=F)
dev.off()
pdf("figures/correlation_joint_sig_definitions.pdf", height = 9, width = 9)
pheatmap(cor_normalised_features_sigs_all)
dev.off()
## correlation per feature
pdf("figures/correlation_several_sig_definitions.pdf", height = 9, width = 9)
normalised_features_sigs <- lapply(names_features, function(names_features_it){
cat(names_features_it, '\n')
if( !(names_features_it %in% names_features[-c(2,3)] ) ){
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'))
}else{
.x <- cbind.data.frame(change_column_paste(normalise_rw(feat_sig_mat[grepl(names_features_it, rownames(feat_sig_mat)),]), 'natgen'),
change_column_paste(normalise_rw(t(fit_pcawg_norm$H[[which(names_features == names_features_it)]])), 'fit_pcawg_norm'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeatures$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeatures'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk3$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk3'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk4$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk4'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5$H[[which(names_features[-c(2,3)] == names_features_it)]])), 'fit_pcawg_norm_fewerfeaturesk5'),
change_column_paste(normalise_rw(t(fit_pcawg_norm_fewerfeaturesk5notnorm$H[[which(names_features[-c(2,3)] == names_features_it)]])),
'fit_pcawg_norm_fewerfeaturesk5notnorm'))
}
cor_x <- as.dist(apply(cor(.x), 2, as.numeric))
.a <- try(hclust(cor_x))
if(typeof(.a) == "character"){
## error
print(pheatmap(cor(.x), cluster_cols = F, cluster_rows = F, main = names_features_it))
}else{
print(pheatmap(cor(.x), main = names_features_it))
}
return(.x)
})
dev.off()
